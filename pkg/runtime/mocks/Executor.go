// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	io "io"

	datastore "github.com/scoir/canis/pkg/datastore"

	mock "github.com/stretchr/testify/mock"

	runtime "github.com/scoir/canis/pkg/runtime"
)

// Executor is an autogenerated mock type for the Executor type
type Executor struct {
	mock.Mock
}

// AgentStatus provides a mock function with given fields: pID
func (_m *Executor) AgentStatus(pID string) (runtime.Process, error) {
	ret := _m.Called(pID)

	var r0 runtime.Process
	if rf, ok := ret.Get(0).(func(string) runtime.Process); ok {
		r0 = rf(pID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(runtime.Process)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(pID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Describe provides a mock function with given fields:
func (_m *Executor) Describe() {
	_m.Called()
}

// LaunchAgent provides a mock function with given fields: agent
func (_m *Executor) LaunchAgent(agent *datastore.Agent) (string, error) {
	ret := _m.Called(agent)

	var r0 string
	if rf, ok := ret.Get(0).(func(*datastore.Agent) string); ok {
		r0 = rf(agent)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*datastore.Agent) error); ok {
		r1 = rf(agent)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PS provides a mock function with given fields:
func (_m *Executor) PS() {
	_m.Called()
}

// ShutdownAgent provides a mock function with given fields: pID
func (_m *Executor) ShutdownAgent(pID string) error {
	ret := _m.Called(pID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(pID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StreamAgentLogs provides a mock function with given fields: pID
func (_m *Executor) StreamAgentLogs(pID string) (io.ReadCloser, error) {
	ret := _m.Called(pID)

	var r0 io.ReadCloser
	if rf, ok := ret.Get(0).(func(string) io.ReadCloser); ok {
		r0 = rf(pID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(io.ReadCloser)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(pID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// WatchAgent provides a mock function with given fields: pID
func (_m *Executor) WatchAgent(pID string) (runtime.Watcher, error) {
	ret := _m.Called(pID)

	var r0 runtime.Watcher
	if rf, ok := ret.Get(0).(func(string) runtime.Watcher); ok {
		r0 = rf(pID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(runtime.Watcher)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(pID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
